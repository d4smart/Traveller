<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.d4smart.traveller.dao.PointMapper" >
  <resultMap id="BaseResultMap" type="com.d4smart.traveller.pojo.Point" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="trail_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sequence" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="longitude" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="latitude" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, trail_id, sequence, longitude, latitude, description, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from point
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from point
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.d4smart.traveller.pojo.Point" >
    insert into point (trail_id, sequence,
      longitude, latitude, description)
    values (#{trailId,jdbcType=INTEGER}, #{sequence,jdbcType=INTEGER},
      #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.d4smart.traveller.pojo.Point" >
    insert into point
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="trailId != null" >
        trail_id,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="trailId != null" >
        #{trailId,jdbcType=INTEGER},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.d4smart.traveller.pojo.Point" >
    update point
    <set >
      <if test="trailId != null" >
        trail_id = #{trailId,jdbcType=INTEGER},
      </if>
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.d4smart.traveller.pojo.Point" >
    update point
    set trail_id = #{trailId,jdbcType=INTEGER},
      sequence = #{sequence,jdbcType=INTEGER},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getByPage" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from point
    where trail_id = #{trailId}
    order by sequence
    limit #{offset}, #{limit}
  </select>

  <select id="getCount" parameterType="int" resultType="int">
    select count(1)
    from point
    where trail_id = #{trailId}
  </select>
</mapper>