<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.d4smart.traveller.dao.CollectionMapper" >
  <resultMap id="BaseResultMap" type="com.d4smart.traveller.pojo.Collection" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="guide_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <resultMap id="GuideResultMap" type="com.d4smart.traveller.pojo.Guide" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="author_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="places" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="thumbnail" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="views" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="likes" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comments" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, guide_id, create_time, update_time
  </sql>
  <sql id="Guide_Column_List_With_Prefix" >
    guide.id, guide.title, guide.author_id, guide.places, guide.thumbnail, guide.views, guide.likes, guide.comments,
    guide.create_time, guide.update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from collection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from collection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.d4smart.traveller.pojo.Collection" >
    insert into collection (user_id, guide_id)
    values (#{userId,jdbcType=INTEGER}, #{guideId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.d4smart.traveller.pojo.Collection" >
    insert into collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="guideId != null" >
        guide_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="guideId != null" >
        #{guideId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.d4smart.traveller.pojo.Collection" >
    update collection
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="guideId != null" >
        guide_id = #{guideId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.d4smart.traveller.pojo.Collection" >
    update collection
    set user_id = #{userId,jdbcType=INTEGER},
      guide_id = #{guideId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="select" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from collection
    where user_id = #{userId}
    and guide_id = #{guideId}
  </select>

  <select id="getByPage" parameterType="map" resultMap="GuideResultMap">
    select
    <include refid="Guide_Column_List_With_Prefix" />
    from collection
    join guide
    on collection.guide_id = guide.id
    <where>
      <if test="userId != null">
        and collection.user_id = #{userId}
      </if>
    </where>
    limit #{offset}, #{limit}
  </select>

  <select id="getCount" parameterType="int" resultType="int">
    select count(1)
    from collection
    <where>
      <if test="userId != null">
        and user_id = #{userId}
      </if>
    </where>
  </select>
</mapper>